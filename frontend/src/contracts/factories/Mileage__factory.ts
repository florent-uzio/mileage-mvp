/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Mileage, MileageInterface } from "../Mileage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "TripAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
    ],
    name: "TripDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "TripUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tripIds",
        type: "uint256[]",
      },
    ],
    name: "TripsRetrieved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDistance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "travelDuration",
        type: "string",
      },
    ],
    name: "allocateTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deleteAllTrips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
    ],
    name: "deleteTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAllTripsForUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tripId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "startLocation",
            type: "string",
          },
          {
            internalType: "string",
            name: "endLocation",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalDistance",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "travelDuration",
            type: "string",
          },
        ],
        internalType: "struct Mileage.TripInformation[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTripsForUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "updateTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTrips",
    outputs: [
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDistance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "travelDuration",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002193380380620021938339818101604052810190620000379190620001f4565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000237565b60405180910390fd5b620000be81620000c660201b60201c565b505062000254565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bc826200018f565b9050919050565b620001ce81620001af565b8114620001da57600080fd5b50565b600081519050620001ee81620001c3565b92915050565b6000602082840312156200020d576200020c6200018a565b5b60006200021d84828501620001dd565b91505092915050565b6200023181620001af565b82525050565b60006020820190506200024e600083018462000226565b92915050565b611f2f80620002646000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b66901f611610066578063b66901f614610139578063d359e40a14610169578063e15ffcb814610199578063f2fde38b146101b5578063f8b98dc1146101d15761009e565b8063715018a6146100a35780638867897b146100ad5780638da5cb5b146100c9578063a77a6912146100e7578063afababa61461011d575b600080fd5b6100ab6101ed565b005b6100c760048036038101906100c291906111b6565b610201565b005b6100d1610446565b6040516100de9190611205565b60405180910390f35b61010160048036038101906100fc91906111b6565b61046f565b60405161011497969594939291906112bf565b60405180910390f35b61013760048036038101906101329190611478565b610666565b005b610153600480360381019061014e919061156e565b6107f2565b6040516101609190611659565b60405180910390f35b610183600480360381019061017e919061156e565b610947565b6040516101909190611831565b60405180910390f35b6101b360048036038101906101ae919061156e565b610bc3565b005b6101cf60048036038101906101ca919061156e565b610c68565b005b6101eb60048036038101906101e69190611853565b610cee565b005b6101f5610e4d565b6101ff6000610ed4565b565b610209610e4d565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006102588284610f98565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036102bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b39061193e565b60405180910390fd5b81600183805490506102ce919061198d565b815481106102df576102de6119c1565b5b9060005260206000209060070201828281548110610300576102ff6119c1565b5b9060005260206000209060070201600082015481600001556001820181600101908161032c9190611c12565b50600282018160020190816103419190611c12565b50600382015481600301556004820154816004015560058201548160050155600682018160060190816103749190611c12565b509050508180548061038957610388611cfa565b5b60019003818190600052602060002090600702016000808201600090556001820160006103b69190611026565b6002820160006103c69190611026565b6003820160009055600482016000905560058201600090556006820160006103ee9190611026565b505090558373ffffffffffffffffffffffffffffffffffffffff167f9ef233dfd573efd9bc2bcbd614bb32a1eac42556e1c0625fee6d3e7a7c93f572846040516104389190611d29565b60405180910390a250505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052816000526040600020818154811061048b57600080fd5b9060005260206000209060070201600091509150508060000154908060010180546104b590611a1f565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611a1f565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b50505050509080600201805461054390611a1f565b80601f016020809104026020016040519081016040528092919081815260200182805461056f90611a1f565b80156105bc5780601f10610591576101008083540402835291602001916105bc565b820191906000526020600020905b81548152906001019060200180831161059f57829003601f168201915b5050505050908060030154908060040154908060050154908060060180546105e390611a1f565b80601f016020809104026020016040519081016040528092919081815260200182805461060f90611a1f565b801561065c5780601f106106315761010080835404028352916020019161065c565b820191906000526020600020905b81548152906001019060200180831161063f57829003601f168201915b5050505050905087565b61066e610e4d565b60006002600081548092919061068390611d44565b9190505590506000600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806040518060e001604052808481526020018a81526020018981526020018881526020018781526020018681526020018581525090806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010190816107489190611d8c565b50604082015181600201908161075e9190611d8c565b50606082015181600301556080820151816004015560a0820151816005015560c08201518160060190816107929190611d8c565b5050508873ffffffffffffffffffffffffffffffffffffffff167fc03428c5f6fe6b4ccfce009c6d7591813fb69f671d19d982056786f6e3fef4b7838a8a6040516107df93929190611e5e565b60405180910390a2505050505050505050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905067ffffffffffffffff8111156108575761085661134d565b5b6040519080825280602002602001820160405280156108855781602001602082028036833780820191505090505b50905060005b82805490508110156108ee578281815481106108aa576108a96119c1565b5b9060005260206000209060070201600001548282815181106108cf576108ce6119c1565b5b60200260200101818152505080806108e690611d44565b91505061088b565b508373ffffffffffffffffffffffffffffffffffffffff167f5946586725257c06c52b26278794b5f1c7403cac9c1cb53c79da7f98510e4dd9826040516109359190611659565b60405180910390a28092505050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610bb857838290600052602060002090600702016040518060e0016040529081600082015481526020016001820180546109e590611a1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1190611a1f565b8015610a5e5780601f10610a3357610100808354040283529160200191610a5e565b820191906000526020600020905b815481529060010190602001808311610a4157829003601f168201915b50505050508152602001600282018054610a7790611a1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa390611a1f565b8015610af05780601f10610ac557610100808354040283529160200191610af0565b820191906000526020600020905b815481529060010190602001808311610ad357829003601f168201915b50505050508152602001600382015481526020016004820154815260200160058201548152602001600682018054610b2790611a1f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5390611a1f565b8015610ba05780601f10610b7557610100808354040283529160200191610ba0565b820191906000526020600020905b815481529060010190602001808311610b8357829003601f168201915b505050505081525050815260200190600101906109a8565b505050509050919050565b610bcb610e4d565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610c169190611066565b8073ffffffffffffffffffffffffffffffffffffffff167f9ef233dfd573efd9bc2bcbd614bb32a1eac42556e1c0625fee6d3e7a7c93f5726000604051610c5d9190611ede565b60405180910390a250565b610c70610e4d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ce25760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cd99190611205565b60405180910390fd5b610ceb81610ed4565b50565b610cf6610e4d565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000610d458286610f98565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610da9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da09061193e565b60405180910390fd5b6000828281548110610dbe57610dbd6119c1565b5b9060005260206000209060070201905084816001019081610ddf9190611d8c565b5083816002019081610df19190611d8c565b508673ffffffffffffffffffffffffffffffffffffffff167f545dc64f2d5ecdd97b774ad17d024b11eaf1e305d6231c921366c4ea16b6ab79878787604051610e3c93929190611e5e565b60405180910390a250505050505050565b610e5561101e565b73ffffffffffffffffffffffffffffffffffffffff16610e73610446565b73ffffffffffffffffffffffffffffffffffffffff1614610ed257610e9661101e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ec99190611205565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600090505b8380549050811015610ff35782848281548110610fc057610fbf6119c1565b5b90600052602060002090600702016000015403610fe05780915050611018565b8080610feb90611d44565b915050610fa0565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b600033905090565b50805461103290611a1f565b6000825580601f106110445750611063565b601f016020900490600052602060002090810190611062919061108a565b5b50565b508054600082556007029060005260206000209081019061108791906110a7565b50565b5b808211156110a357600081600090555060010161108b565b5090565b5b8082111561110a576000808201600090556001820160006110c99190611026565b6002820160006110d99190611026565b6003820160009055600482016000905560058201600090556006820160006111019190611026565b506007016110a8565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114d82611122565b9050919050565b61115d81611142565b811461116857600080fd5b50565b60008135905061117a81611154565b92915050565b6000819050919050565b61119381611180565b811461119e57600080fd5b50565b6000813590506111b08161118a565b92915050565b600080604083850312156111cd576111cc611118565b5b60006111db8582860161116b565b92505060206111ec858286016111a1565b9150509250929050565b6111ff81611142565b82525050565b600060208201905061121a60008301846111f6565b92915050565b61122981611180565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561126957808201518184015260208101905061124e565b60008484015250505050565b6000601f19601f8301169050919050565b60006112918261122f565b61129b818561123a565b93506112ab81856020860161124b565b6112b481611275565b840191505092915050565b600060e0820190506112d4600083018a611220565b81810360208301526112e68189611286565b905081810360408301526112fa8188611286565b90506113096060830187611220565b6113166080830186611220565b61132360a0830185611220565b81810360c08301526113358184611286565b905098975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61138582611275565b810181811067ffffffffffffffff821117156113a4576113a361134d565b5b80604052505050565b60006113b761110e565b90506113c3828261137c565b919050565b600067ffffffffffffffff8211156113e3576113e261134d565b5b6113ec82611275565b9050602081019050919050565b82818337600083830152505050565b600061141b611416846113c8565b6113ad565b90508281526020810184848401111561143757611436611348565b5b6114428482856113f9565b509392505050565b600082601f83011261145f5761145e611343565b5b813561146f848260208601611408565b91505092915050565b600080600080600080600060e0888a03121561149757611496611118565b5b60006114a58a828b0161116b565b975050602088013567ffffffffffffffff8111156114c6576114c561111d565b5b6114d28a828b0161144a565b965050604088013567ffffffffffffffff8111156114f3576114f261111d565b5b6114ff8a828b0161144a565b95505060606115108a828b016111a1565b94505060806115218a828b016111a1565b93505060a06115328a828b016111a1565b92505060c088013567ffffffffffffffff8111156115535761155261111d565b5b61155f8a828b0161144a565b91505092959891949750929550565b60006020828403121561158457611583611118565b5b60006115928482850161116b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6115d081611180565b82525050565b60006115e283836115c7565b60208301905092915050565b6000602082019050919050565b60006116068261159b565b61161081856115a6565b935061161b836115b7565b8060005b8381101561164c57815161163388826115d6565b975061163e836115ee565b92505060018101905061161f565b5085935050505092915050565b6000602082019050818103600083015261167381846115fb565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006116c38261122f565b6116cd81856116a7565b93506116dd81856020860161124b565b6116e681611275565b840191505092915050565b600060e08301600083015161170960008601826115c7565b506020830151848203602086015261172182826116b8565b9150506040830151848203604086015261173b82826116b8565b915050606083015161175060608601826115c7565b50608083015161176360808601826115c7565b5060a083015161177660a08601826115c7565b5060c083015184820360c086015261178e82826116b8565b9150508091505092915050565b60006117a783836116f1565b905092915050565b6000602082019050919050565b60006117c78261167b565b6117d18185611686565b9350836020820285016117e385611697565b8060005b8581101561181f5784840389528151611800858261179b565b945061180b836117af565b925060208a019950506001810190506117e7565b50829750879550505050505092915050565b6000602082019050818103600083015261184b81846117bc565b905092915050565b6000806000806080858703121561186d5761186c611118565b5b600061187b8782880161116b565b945050602061188c878288016111a1565b935050604085013567ffffffffffffffff8111156118ad576118ac61111d565b5b6118b98782880161144a565b925050606085013567ffffffffffffffff8111156118da576118d961111d565b5b6118e68782880161144a565b91505092959194509250565b7f54726970206e6f7420666f756e64000000000000000000000000000000000000600082015250565b6000611928600e8361123a565b9150611933826118f2565b602082019050919050565b600060208201905081810360008301526119578161191b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061199882611180565b91506119a383611180565b92508282039050818111156119bb576119ba61195e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a3757607f821691505b602082108103611a4a57611a496119f0565b5b50919050565b600081549050611a5f81611a1f565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ac87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a8b565b611ad28683611a8b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611b0f611b0a611b0584611180565b611aea565b611180565b9050919050565b6000819050919050565b611b2983611af4565b611b3d611b3582611b16565b848454611a98565b825550505050565b600090565b611b52611b45565b611b5d818484611b20565b505050565b5b81811015611b8157611b76600082611b4a565b600181019050611b63565b5050565b601f821115611bc657611b9781611a66565b611ba084611a7b565b81016020851015611baf578190505b611bc3611bbb85611a7b565b830182611b62565b50505b505050565b600082821c905092915050565b6000611be960001984600802611bcb565b1980831691505092915050565b6000611c028383611bd8565b9150826002028217905092915050565b818103611c20575050611cf8565b611c2982611a50565b67ffffffffffffffff811115611c4257611c4161134d565b5b611c4c8254611a1f565b611c57828285611b85565b6000601f831160018114611c865760008415611c74578287015490505b611c7e8582611bf6565b865550611cf1565b601f198416611c9487611a66565b9650611c9f86611a66565b60005b82811015611cc757848901548255600182019150600185019450602081019050611ca2565b86831015611ce45784890154611ce0601f891682611bd8565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000602082019050611d3e6000830184611220565b92915050565b6000611d4f82611180565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d8157611d8061195e565b5b600182019050919050565b611d958261122f565b67ffffffffffffffff811115611dae57611dad61134d565b5b611db88254611a1f565b611dc3828285611b85565b600060209050601f831160018114611df65760008415611de4578287015190505b611dee8582611bf6565b865550611e56565b601f198416611e0486611a66565b60005b82811015611e2c57848901518255600182019150602085019450602081019050611e07565b86831015611e495784890151611e45601f891682611bd8565b8355505b6001600288020188555050505b505050505050565b6000606082019050611e736000830186611220565b8181036020830152611e858185611286565b90508181036040830152611e998184611286565b9050949350505050565b6000819050919050565b6000611ec8611ec3611ebe84611ea3565b611aea565b611180565b9050919050565b611ed881611ead565b82525050565b6000602082019050611ef36000830184611ecf565b9291505056fea26469706673582212203cca028b613e3ce443bfd2896a87ab4381ee66c81266a317e2f09ba64bcdafcb64736f6c63430008130033";

type MileageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MileageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mileage__factory extends ContractFactory {
  constructor(...args: MileageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      Mileage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Mileage__factory {
    return super.connect(runner) as Mileage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MileageInterface {
    return new Interface(_abi) as MileageInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Mileage {
    return new Contract(address, _abi, runner) as unknown as Mileage;
  }
}
