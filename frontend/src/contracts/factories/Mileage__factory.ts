/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Mileage, MileageInterface } from "../Mileage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "TripAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
    ],
    name: "TripDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "TripUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tripIds",
        type: "uint256[]",
      },
    ],
    name: "TripsRetrieved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalDistance",
        type: "uint256",
      },
    ],
    name: "allocateTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deleteAllTrips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
    ],
    name: "deleteTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAllTripsForUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tripId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "startLocation",
            type: "string",
          },
          {
            internalType: "string",
            name: "endLocation",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalDistance",
            type: "uint256",
          },
        ],
        internalType: "struct Mileage.TripInformation[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTripsForUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "updateTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTrips",
    outputs: [
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalDistance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ee038038062001ee08339818101604052810190620000379190620001f4565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000237565b60405180910390fd5b620000be81620000c660201b60201c565b505062000254565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bc826200018f565b9050919050565b620001ce81620001af565b8114620001da57600080fd5b50565b600081519050620001ee81620001c3565b92915050565b6000602082840312156200020d576200020c6200018a565b5b60006200021d84828501620001dd565b91505092915050565b6200023181620001af565b82525050565b60006020820190506200024e600083018462000226565b92915050565b611c7c80620002646000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b66901f611610066578063b66901f614610136578063d359e40a14610166578063e15ffcb814610196578063f2fde38b146101b2578063f8b98dc1146101ce5761009e565b806332fe78d3146100a3578063715018a6146100bf5780638867897b146100c95780638da5cb5b146100e5578063a77a691214610103575b600080fd5b6100bd60048036038101906100b89190611111565b6101ea565b005b6100c7610337565b005b6100e360048036038101906100de91906111b0565b61034b565b005b6100ed610547565b6040516100fa91906111ff565b60405180910390f35b61011d600480360381019061011891906111b0565b610570565b60405161012d94939291906112a8565b60405180910390f35b610150600480360381019061014b91906112fb565b6106cd565b60405161015d91906113e6565b60405180910390f35b610180600480360381019061017b91906112fb565b610822565b60405161018d919061157e565b60405180910390f35b6101b060048036038101906101ab91906112fb565b6109f8565b005b6101cc60048036038101906101c791906112fb565b610a9d565b005b6101e860048036038101906101e391906115a0565b610b23565b005b6101f2610c82565b6000600260008154809291906102079061166e565b9190505590506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060405180608001604052808481526020018781526020018681526020018581525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000015560208201518160010190816102ba91906118c2565b5060408201518160020190816102d091906118c2565b506060820151816003015550508573ffffffffffffffffffffffffffffffffffffffff167fc03428c5f6fe6b4ccfce009c6d7591813fb69f671d19d982056786f6e3fef4b783878760405161032793929190611994565b60405180910390a2505050505050565b61033f610c82565b6103496000610d09565b565b610353610c82565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006103a28284610dcd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd90611a25565b60405180910390fd5b81600183805490506104189190611a45565b8154811061042957610428611a79565b5b906000526020600020906004020182828154811061044a57610449611a79565b5b906000526020600020906004020160008201548160000155600182018160010190816104769190611abe565b506002820181600201908161048b9190611abe565b5060038201548160030155905050818054806104aa576104a9611ba6565b5b60019003818190600052602060002090600402016000808201600090556001820160006104d79190610e5b565b6002820160006104e79190610e5b565b6003820160009055505090558373ffffffffffffffffffffffffffffffffffffffff167f9ef233dfd573efd9bc2bcbd614bb32a1eac42556e1c0625fee6d3e7a7c93f572846040516105399190611bd5565b60405180910390a250505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052816000526040600020818154811061058c57600080fd5b9060005260206000209060040201600091509150508060000154908060010180546105b6906116e5565b80601f01602080910402602001604051908101604052809291908181526020018280546105e2906116e5565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b505050505090806002018054610644906116e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610670906116e5565b80156106bd5780601f10610692576101008083540402835291602001916106bd565b820191906000526020600020905b8154815290600101906020018083116106a057829003601f168201915b5050505050908060030154905084565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905067ffffffffffffffff81111561073257610731610fb0565b5b6040519080825280602002602001820160405280156107605781602001602082028036833780820191505090505b50905060005b82805490508110156107c95782818154811061078557610784611a79565b5b9060005260206000209060040201600001548282815181106107aa576107a9611a79565b5b60200260200101818152505080806107c19061166e565b915050610766565b508373ffffffffffffffffffffffffffffffffffffffff167f5946586725257c06c52b26278794b5f1c7403cac9c1cb53c79da7f98510e4dd98260405161081091906113e6565b60405180910390a28092505050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109ed5783829060005260206000209060040201604051806080016040529081600082015481526020016001820180546108c0906116e5565b80601f01602080910402602001604051908101604052809291908181526020018280546108ec906116e5565b80156109395780601f1061090e57610100808354040283529160200191610939565b820191906000526020600020905b81548152906001019060200180831161091c57829003601f168201915b50505050508152602001600282018054610952906116e5565b80601f016020809104026020016040519081016040528092919081815260200182805461097e906116e5565b80156109cb5780601f106109a0576101008083540402835291602001916109cb565b820191906000526020600020905b8154815290600101906020018083116109ae57829003601f168201915b5050505050815260200160038201548152505081526020019060010190610883565b505050509050919050565b610a00610c82565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610a4b9190610e9b565b8073ffffffffffffffffffffffffffffffffffffffff167f9ef233dfd573efd9bc2bcbd614bb32a1eac42556e1c0625fee6d3e7a7c93f5726000604051610a929190611c2b565b60405180910390a250565b610aa5610c82565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b175760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b0e91906111ff565b60405180910390fd5b610b2081610d09565b50565b610b2b610c82565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000610b7a8286610dcd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd590611a25565b60405180910390fd5b6000828281548110610bf357610bf2611a79565b5b9060005260206000209060040201905084816001019081610c1491906118c2565b5083816002019081610c2691906118c2565b508673ffffffffffffffffffffffffffffffffffffffff167f545dc64f2d5ecdd97b774ad17d024b11eaf1e305d6231c921366c4ea16b6ab79878787604051610c7193929190611994565b60405180910390a250505050505050565b610c8a610e53565b73ffffffffffffffffffffffffffffffffffffffff16610ca8610547565b73ffffffffffffffffffffffffffffffffffffffff1614610d0757610ccb610e53565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cfe91906111ff565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600090505b8380549050811015610e285782848281548110610df557610df4611a79565b5b90600052602060002090600402016000015403610e155780915050610e4d565b8080610e209061166e565b915050610dd5565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b600033905090565b508054610e67906116e5565b6000825580601f10610e795750610e98565b601f016020900490600052602060002090810190610e979190610ebf565b5b50565b5080546000825560040290600052602060002090810190610ebc9190610edc565b50565b5b80821115610ed8576000816000905550600101610ec0565b5090565b5b80821115610f1f57600080820160009055600182016000610efe9190610e5b565b600282016000610f0e9190610e5b565b600382016000905550600401610edd565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6282610f37565b9050919050565b610f7281610f57565b8114610f7d57600080fd5b50565b600081359050610f8f81610f69565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fe882610f9f565b810181811067ffffffffffffffff8211171561100757611006610fb0565b5b80604052505050565b600061101a610f23565b90506110268282610fdf565b919050565b600067ffffffffffffffff82111561104657611045610fb0565b5b61104f82610f9f565b9050602081019050919050565b82818337600083830152505050565b600061107e6110798461102b565b611010565b90508281526020810184848401111561109a57611099610f9a565b5b6110a584828561105c565b509392505050565b600082601f8301126110c2576110c1610f95565b5b81356110d284826020860161106b565b91505092915050565b6000819050919050565b6110ee816110db565b81146110f957600080fd5b50565b60008135905061110b816110e5565b92915050565b6000806000806080858703121561112b5761112a610f2d565b5b600061113987828801610f80565b945050602085013567ffffffffffffffff81111561115a57611159610f32565b5b611166878288016110ad565b935050604085013567ffffffffffffffff81111561118757611186610f32565b5b611193878288016110ad565b92505060606111a4878288016110fc565b91505092959194509250565b600080604083850312156111c7576111c6610f2d565b5b60006111d585828601610f80565b92505060206111e6858286016110fc565b9150509250929050565b6111f981610f57565b82525050565b600060208201905061121460008301846111f0565b92915050565b611223816110db565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611263578082015181840152602081019050611248565b60008484015250505050565b600061127a82611229565b6112848185611234565b9350611294818560208601611245565b61129d81610f9f565b840191505092915050565b60006080820190506112bd600083018761121a565b81810360208301526112cf818661126f565b905081810360408301526112e3818561126f565b90506112f2606083018461121a565b95945050505050565b60006020828403121561131157611310610f2d565b5b600061131f84828501610f80565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61135d816110db565b82525050565b600061136f8383611354565b60208301905092915050565b6000602082019050919050565b600061139382611328565b61139d8185611333565b93506113a883611344565b8060005b838110156113d95781516113c08882611363565b97506113cb8361137b565b9250506001810190506113ac565b5085935050505092915050565b600060208201905081810360008301526114008184611388565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061145082611229565b61145a8185611434565b935061146a818560208601611245565b61147381610f9f565b840191505092915050565b60006080830160008301516114966000860182611354565b50602083015184820360208601526114ae8282611445565b915050604083015184820360408601526114c88282611445565b91505060608301516114dd6060860182611354565b508091505092915050565b60006114f4838361147e565b905092915050565b6000602082019050919050565b600061151482611408565b61151e8185611413565b93508360208202850161153085611424565b8060005b8581101561156c578484038952815161154d85826114e8565b9450611558836114fc565b925060208a01995050600181019050611534565b50829750879550505050505092915050565b600060208201905081810360008301526115988184611509565b905092915050565b600080600080608085870312156115ba576115b9610f2d565b5b60006115c887828801610f80565b94505060206115d9878288016110fc565b935050604085013567ffffffffffffffff8111156115fa576115f9610f32565b5b611606878288016110ad565b925050606085013567ffffffffffffffff81111561162757611626610f32565b5b611633878288016110ad565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611679826110db565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116ab576116aa61163f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116fd57607f821691505b6020821081036117105761170f6116b6565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117787fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261173b565b611782868361173b565b95508019841693508086168417925050509392505050565b6000819050919050565b60006117bf6117ba6117b5846110db565b61179a565b6110db565b9050919050565b6000819050919050565b6117d9836117a4565b6117ed6117e5826117c6565b848454611748565b825550505050565b600090565b6118026117f5565b61180d8184846117d0565b505050565b5b81811015611831576118266000826117fa565b600181019050611813565b5050565b601f8211156118765761184781611716565b6118508461172b565b8101602085101561185f578190505b61187361186b8561172b565b830182611812565b50505b505050565b600082821c905092915050565b60006118996000198460080261187b565b1980831691505092915050565b60006118b28383611888565b9150826002028217905092915050565b6118cb82611229565b67ffffffffffffffff8111156118e4576118e3610fb0565b5b6118ee82546116e5565b6118f9828285611835565b600060209050601f83116001811461192c576000841561191a578287015190505b61192485826118a6565b86555061198c565b601f19841661193a86611716565b60005b828110156119625784890151825560018201915060208501945060208101905061193d565b8683101561197f578489015161197b601f891682611888565b8355505b6001600288020188555050505b505050505050565b60006060820190506119a9600083018661121a565b81810360208301526119bb818561126f565b905081810360408301526119cf818461126f565b9050949350505050565b7f54726970206e6f7420666f756e64000000000000000000000000000000000000600082015250565b6000611a0f600e83611234565b9150611a1a826119d9565b602082019050919050565b60006020820190508181036000830152611a3e81611a02565b9050919050565b6000611a50826110db565b9150611a5b836110db565b9250828203905081811115611a7357611a7261163f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081549050611ab7816116e5565b9050919050565b818103611acc575050611ba4565b611ad582611aa8565b67ffffffffffffffff811115611aee57611aed610fb0565b5b611af882546116e5565b611b03828285611835565b6000601f831160018114611b325760008415611b20578287015490505b611b2a85826118a6565b865550611b9d565b601f198416611b4087611716565b9650611b4b86611716565b60005b82811015611b7357848901548255600182019150600185019450602081019050611b4e565b86831015611b905784890154611b8c601f891682611888565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000602082019050611bea600083018461121a565b92915050565b6000819050919050565b6000611c15611c10611c0b84611bf0565b61179a565b6110db565b9050919050565b611c2581611bfa565b82525050565b6000602082019050611c406000830184611c1c565b9291505056fea26469706673582212209781eb91c5d1daa599a5f00e3825688591145340d6020bbebad3253fe5a45be764736f6c63430008130033";

type MileageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MileageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mileage__factory extends ContractFactory {
  constructor(...args: MileageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      Mileage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Mileage__factory {
    return super.connect(runner) as Mileage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MileageInterface {
    return new Interface(_abi) as MileageInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Mileage {
    return new Contract(address, _abi, runner) as unknown as Mileage;
  }
}
