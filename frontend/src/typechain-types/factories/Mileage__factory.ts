/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Mileage, MileageInterface } from "../Mileage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "TripAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
    ],
    name: "TripDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "TripUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDistance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "travelDuration",
        type: "string",
      },
    ],
    name: "allocateTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deleteAllTrips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
    ],
    name: "deleteTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
    ],
    name: "updateTrip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTrips",
    outputs: [
      {
        internalType: "uint256",
        name: "tripId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "startLocation",
        type: "string",
      },
      {
        internalType: "string",
        name: "endLocation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDistance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "travelDuration",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a9438038062001a948339818101604052810190620000379190620001f4565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000237565b60405180910390fd5b620000be81620000c660201b60201c565b505062000254565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bc826200018f565b9050919050565b620001ce81620001af565b8114620001da57600080fd5b50565b600081519050620001ee81620001c3565b92915050565b6000602082840312156200020d576200020c6200018a565b5b60006200021d84828501620001dd565b91505092915050565b6200023181620001af565b82525050565b60006020820190506200024e600083018462000226565b92915050565b61183080620002646000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063afababa61161005b578063afababa614610107578063e15ffcb814610123578063f2fde38b1461013f578063f8b98dc11461015b57610088565b8063715018a61461008d5780638867897b146100975780638da5cb5b146100b3578063a77a6912146100d1575b600080fd5b610095610177565b005b6100b160048036038101906100ac9190610d6f565b61018b565b005b6100bb6103d0565b6040516100c89190610dbe565b60405180910390f35b6100eb60048036038101906100e69190610d6f565b6103f9565b6040516100fe9796959493929190610e78565b60405180910390f35b610121600480360381019061011c9190611031565b6105f0565b005b61013d60048036038101906101389190611127565b61077c565b005b61015960048036038101906101549190611127565b610821565b005b61017560048036038101906101709190611154565b6108a7565b005b61017f610a06565b6101896000610a8d565b565b610193610a06565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006101e28284610b51565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023d9061123f565b60405180910390fd5b8160018380549050610258919061128e565b81548110610269576102686112c2565b5b906000526020600020906007020182828154811061028a576102896112c2565b5b906000526020600020906007020160008201548160000155600182018160010190816102b69190611513565b50600282018160020190816102cb9190611513565b50600382015481600301556004820154816004015560058201548160050155600682018160060190816102fe9190611513565b5090505081805480610313576103126115fb565b5b60019003818190600052602060002090600702016000808201600090556001820160006103409190610bdf565b6002820160006103509190610bdf565b6003820160009055600482016000905560058201600090556006820160006103789190610bdf565b505090558373ffffffffffffffffffffffffffffffffffffffff167f9ef233dfd573efd9bc2bcbd614bb32a1eac42556e1c0625fee6d3e7a7c93f572846040516103c2919061162a565b60405180910390a250505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052816000526040600020818154811061041557600080fd5b90600052602060002090600702016000915091505080600001549080600101805461043f90611320565b80601f016020809104026020016040519081016040528092919081815260200182805461046b90611320565b80156104b85780601f1061048d576101008083540402835291602001916104b8565b820191906000526020600020905b81548152906001019060200180831161049b57829003601f168201915b5050505050908060020180546104cd90611320565b80601f01602080910402602001604051908101604052809291908181526020018280546104f990611320565b80156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b50505050509080600301549080600401549080600501549080600601805461056d90611320565b80601f016020809104026020016040519081016040528092919081815260200182805461059990611320565b80156105e65780601f106105bb576101008083540402835291602001916105e6565b820191906000526020600020905b8154815290600101906020018083116105c957829003601f168201915b5050505050905087565b6105f8610a06565b60006002600081548092919061060d90611645565b9190505590506000600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806040518060e001604052808481526020018a81526020018981526020018881526020018781526020018681526020018581525090806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010190816106d2919061168d565b5060408201518160020190816106e8919061168d565b50606082015181600301556080820151816004015560a0820151816005015560c082015181600601908161071c919061168d565b5050508873ffffffffffffffffffffffffffffffffffffffff167fc03428c5f6fe6b4ccfce009c6d7591813fb69f671d19d982056786f6e3fef4b7838a8a6040516107699392919061175f565b60405180910390a2505050505050505050565b610784610a06565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107cf9190610c1f565b8073ffffffffffffffffffffffffffffffffffffffff167f9ef233dfd573efd9bc2bcbd614bb32a1eac42556e1c0625fee6d3e7a7c93f572600060405161081691906117df565b60405180910390a250565b610829610a06565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361089b5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108929190610dbe565b60405180910390fd5b6108a481610a8d565b50565b6108af610a06565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006108fe8286610b51565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8103610962576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109599061123f565b60405180910390fd5b6000828281548110610977576109766112c2565b5b9060005260206000209060070201905084816001019081610998919061168d565b50838160020190816109aa919061168d565b508673ffffffffffffffffffffffffffffffffffffffff167f545dc64f2d5ecdd97b774ad17d024b11eaf1e305d6231c921366c4ea16b6ab798787876040516109f59392919061175f565b60405180910390a250505050505050565b610a0e610bd7565b73ffffffffffffffffffffffffffffffffffffffff16610a2c6103d0565b73ffffffffffffffffffffffffffffffffffffffff1614610a8b57610a4f610bd7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a829190610dbe565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600090505b8380549050811015610bac5782848281548110610b7957610b786112c2565b5b90600052602060002090600702016000015403610b995780915050610bd1565b8080610ba490611645565b915050610b59565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90505b92915050565b600033905090565b508054610beb90611320565b6000825580601f10610bfd5750610c1c565b601f016020900490600052602060002090810190610c1b9190610c43565b5b50565b5080546000825560070290600052602060002090810190610c409190610c60565b50565b5b80821115610c5c576000816000905550600101610c44565b5090565b5b80821115610cc357600080820160009055600182016000610c829190610bdf565b600282016000610c929190610bdf565b600382016000905560048201600090556005820160009055600682016000610cba9190610bdf565b50600701610c61565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0682610cdb565b9050919050565b610d1681610cfb565b8114610d2157600080fd5b50565b600081359050610d3381610d0d565b92915050565b6000819050919050565b610d4c81610d39565b8114610d5757600080fd5b50565b600081359050610d6981610d43565b92915050565b60008060408385031215610d8657610d85610cd1565b5b6000610d9485828601610d24565b9250506020610da585828601610d5a565b9150509250929050565b610db881610cfb565b82525050565b6000602082019050610dd36000830184610daf565b92915050565b610de281610d39565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e22578082015181840152602081019050610e07565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e4a82610de8565b610e548185610df3565b9350610e64818560208601610e04565b610e6d81610e2e565b840191505092915050565b600060e082019050610e8d600083018a610dd9565b8181036020830152610e9f8189610e3f565b90508181036040830152610eb38188610e3f565b9050610ec26060830187610dd9565b610ecf6080830186610dd9565b610edc60a0830185610dd9565b81810360c0830152610eee8184610e3f565b905098975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f3e82610e2e565b810181811067ffffffffffffffff82111715610f5d57610f5c610f06565b5b80604052505050565b6000610f70610cc7565b9050610f7c8282610f35565b919050565b600067ffffffffffffffff821115610f9c57610f9b610f06565b5b610fa582610e2e565b9050602081019050919050565b82818337600083830152505050565b6000610fd4610fcf84610f81565b610f66565b905082815260208101848484011115610ff057610fef610f01565b5b610ffb848285610fb2565b509392505050565b600082601f83011261101857611017610efc565b5b8135611028848260208601610fc1565b91505092915050565b600080600080600080600060e0888a0312156110505761104f610cd1565b5b600061105e8a828b01610d24565b975050602088013567ffffffffffffffff81111561107f5761107e610cd6565b5b61108b8a828b01611003565b965050604088013567ffffffffffffffff8111156110ac576110ab610cd6565b5b6110b88a828b01611003565b95505060606110c98a828b01610d5a565b94505060806110da8a828b01610d5a565b93505060a06110eb8a828b01610d5a565b92505060c088013567ffffffffffffffff81111561110c5761110b610cd6565b5b6111188a828b01611003565b91505092959891949750929550565b60006020828403121561113d5761113c610cd1565b5b600061114b84828501610d24565b91505092915050565b6000806000806080858703121561116e5761116d610cd1565b5b600061117c87828801610d24565b945050602061118d87828801610d5a565b935050604085013567ffffffffffffffff8111156111ae576111ad610cd6565b5b6111ba87828801611003565b925050606085013567ffffffffffffffff8111156111db576111da610cd6565b5b6111e787828801611003565b91505092959194509250565b7f54726970206e6f7420666f756e64000000000000000000000000000000000000600082015250565b6000611229600e83610df3565b9150611234826111f3565b602082019050919050565b600060208201905081810360008301526112588161121c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061129982610d39565b91506112a483610d39565b92508282039050818111156112bc576112bb61125f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061133857607f821691505b60208210810361134b5761134a6112f1565b5b50919050565b60008154905061136081611320565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113c97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261138c565b6113d3868361138c565b95508019841693508086168417925050509392505050565b6000819050919050565b600061141061140b61140684610d39565b6113eb565b610d39565b9050919050565b6000819050919050565b61142a836113f5565b61143e61143682611417565b848454611399565b825550505050565b600090565b611453611446565b61145e818484611421565b505050565b5b818110156114825761147760008261144b565b600181019050611464565b5050565b601f8211156114c75761149881611367565b6114a18461137c565b810160208510156114b0578190505b6114c46114bc8561137c565b830182611463565b50505b505050565b600082821c905092915050565b60006114ea600019846008026114cc565b1980831691505092915050565b600061150383836114d9565b9150826002028217905092915050565b8181036115215750506115f9565b61152a82611351565b67ffffffffffffffff81111561154357611542610f06565b5b61154d8254611320565b611558828285611486565b6000601f8311600181146115875760008415611575578287015490505b61157f85826114f7565b8655506115f2565b601f19841661159587611367565b96506115a086611367565b60005b828110156115c8578489015482556001820191506001850194506020810190506115a3565b868310156115e557848901546115e1601f8916826114d9565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600060208201905061163f6000830184610dd9565b92915050565b600061165082610d39565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116825761168161125f565b5b600182019050919050565b61169682610de8565b67ffffffffffffffff8111156116af576116ae610f06565b5b6116b98254611320565b6116c4828285611486565b600060209050601f8311600181146116f757600084156116e5578287015190505b6116ef85826114f7565b865550611757565b601f19841661170586611367565b60005b8281101561172d57848901518255600182019150602085019450602081019050611708565b8683101561174a5784890151611746601f8916826114d9565b8355505b6001600288020188555050505b505050505050565b60006060820190506117746000830186610dd9565b81810360208301526117868185610e3f565b9050818103604083015261179a8184610e3f565b9050949350505050565b6000819050919050565b60006117c96117c46117bf846117a4565b6113eb565b610d39565b9050919050565b6117d9816117ae565b82525050565b60006020820190506117f460008301846117d0565b9291505056fea2646970667358221220f6c5e48a2203be67fdf4d40fa187799f77c310557d91ad8571e71c04e1b39cbe64736f6c63430008130033";

type MileageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MileageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mileage__factory extends ContractFactory {
  constructor(...args: MileageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      Mileage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Mileage__factory {
    return super.connect(runner) as Mileage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MileageInterface {
    return new Interface(_abi) as MileageInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Mileage {
    return new Contract(address, _abi, runner) as unknown as Mileage;
  }
}
